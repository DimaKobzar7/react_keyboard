{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressed","keyBoardBtn","document","addEventListener","event","setState","key","this","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAOaA,EAAb,4MACEC,MAAyB,CACvBC,SAAS,EACTC,YAAa,IAHjB,uDAME,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEL,SAAS,EAAMC,YAAaG,EAAME,WARxD,oBAYE,WACE,MAAiCC,KAAKR,MAA9BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,YAEjB,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIR,EAAD,mCAE+BC,EAF/B,KACG,kCAnBd,GAAyBQ,a,MCFzBC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.a8d29dc1.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressed: boolean,\n  keyBoardBtn : string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressed: false,\n    keyBoardBtn: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressed: true, keyBoardBtn: event.key });\n    });\n  }\n\n  render() {\n    const { pressed, keyBoardBtn } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!pressed\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${keyBoardBtn}]`}\n        </p>\n      </div>\n    );\n  }\n}\n\n// // import React from 'react';\n// import { Component } from 'react';\n\n// type State = {\n//   pressed: boolean,\n//   keyBoardBtn : string,\n// };\n\n// В классовой компоненте даже если те не передаешь пропсы их надо указывать в дженерике как пустой обьект\n// поэтому надо пустой обект передавать\n// export class App extends Component<{}, State> {\n//   state: Readonly<State> = {\n//     pressed: false,\n//     keyBoardBtn: '',\n//   };\n\n//   componentDidMount() {\n//     document.addEventListener('keyup', (event: KeyboardEvent) => {\n//       // key показывает именно какая кнопка нажалась на клавиатуре\n//       // key єто свойство event\n//       // console.log(event.key);\n//       this.setState({ pressed: true, keyBoardBtn: event.key });\n//     });\n//   }\n\n//   // надо отслеживать было ли нажатие вообще и при  методе отключения на фолз ставить\n//   // а ключ в сообщение выводить\n//   // надо сделать функцию на которую цеплять обработчик события\n//   // и в нем через сет стейт менять фолз на тру и через другой метод снимать обработчик\n//   render() {\n//     const { pressed, keyBoardBtn } = this.state;\n\n//     return (\n//       <div className=\"App\">\n//         {/* <p className=\"App__message\">The last pressed key is [Enter]</p> */}\n//         <p className=\"App__message\">\n//           {pressed === false\n//             ? 'Nothing was pressed yet'\n//             : `The last pressed key is [${keyBoardBtn}]`}\n//         </p>\n//       </div>\n//     );\n//   }\n// }\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}